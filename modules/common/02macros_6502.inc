; *******************************************************************************************
; *******************************************************************************************
;
;		Name : 		02macros_6502.inc
;		Purpose :	Macros (65C02)
;		Date :		5th November 2024
;		Author : 	Paul Robson (paul@robsons.org.uk)
;
; *******************************************************************************************
; *******************************************************************************************

!if CPU=6502 {

; -------------------------------------------------------------------------------------------
;
;							Copy B to A as 32 bit integer
;
; -------------------------------------------------------------------------------------------
!macro Copy32BA {
	jsr 	Copy32BA6502
}
; -------------------------------------------------------------------------------------------
;
;					Add B to A as 32 bit integer, sets N and C 
;
; -------------------------------------------------------------------------------------------
!macro Add32AB {
	jsr 	Add32AB6502
}
; -------------------------------------------------------------------------------------------
;
;					Sub B from A as 32 bit integer, sets N and C 
;
; -------------------------------------------------------------------------------------------
!macro Sub32AB {
	jsr 	Sub32AB6502
}
; -------------------------------------------------------------------------------------------
;
;								Shift A right 1 bit, sets C
;
; -------------------------------------------------------------------------------------------
!macro Shr32A {		
	jsr 	Shr32A6502
}
; -------------------------------------------------------------------------------------------
;
;								Shift B right 1 bit, sets C
;
; -------------------------------------------------------------------------------------------
!macro Shr32B {		
	jsr 	Shr32B6502
}
; -------------------------------------------------------------------------------------------
;
;								Shift A left 1 bit, sets C
;
; -------------------------------------------------------------------------------------------
!macro Shl32A {		
	jsr 	Shl32A6502
}
; -------------------------------------------------------------------------------------------
;
;								Shift B left 1 bit, sets C
;
; -------------------------------------------------------------------------------------------
!macro Shl32B {		
	jsr 	Shl32B6502
}
; -------------------------------------------------------------------------------------------
;
;									Check if A is zero
;
; -------------------------------------------------------------------------------------------
!macro Test32A {		
	jsr 	Test32A6502
}
; -------------------------------------------------------------------------------------------
;
;									Check if B is zero
;
; -------------------------------------------------------------------------------------------
!macro Test32B {		
	jsr 	Test32B6502
}
; -------------------------------------------------------------------------------------------
;
;								Negate A, no signs
;
; -------------------------------------------------------------------------------------------
!macro Neg32A {		
	jsr 	Neg32A6502
}

}
