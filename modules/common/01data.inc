; *******************************************************************************************
; *******************************************************************************************
;
;		Name : 		01data.inc
;		Purpose :	Data files
;		Date :		5th November 2024
;		Author : 	Paul Robson (paul@robsons.org.uk)
;
; *******************************************************************************************
; *******************************************************************************************

		codeAddress = *

; *******************************************************************************************
;
;			  This flag when non-zero puts the math register into zero page
;
; *******************************************************************************************

mathInZeroPage = 1

; *******************************************************************************************
;
;				Macro to define A/B math registers, which can go in A or B
;
; *******************************************************************************************

		!macro 	MathRegisterSet {

aFlags:
		!skip 	1
aExponent:		
		!skip 	1
aMantissa:
		!skip 	4

bFlags:
		!skip 	1
bExponent:		
		!skip 	1
bMantissa:
		!skip 	4
}

; *******************************************************************************************
;
;										Zero Page
;
; *******************************************************************************************

		* = zeroPageSpace

		!if mathInZeroPage <> 0 {
		+MathRegisterSet
		}

codePtr:
		!skip	2

dataPtr:
		!skip	2

stringAddr:
		!skip	2

basicStackPtr:
		!skip	2

zTemp0:			
		!skip	2

zTemp1:			
		!skip	2

zTemp2:			
		!skip	2


; *******************************************************************************************
;
;								Non-Zero page data space
;
; *******************************************************************************************

		* = dataSpace

		!if mathInZeroPage = 0 {
		+MathRegisterSet
		}

rFlags:
		!skip 	1
rExponent:		
		!skip 	1
rMantissa:
		!skip 	4
		* = codeAddress